import boto3

def create_s3_bucket(bucket_name, region):
    """Create an S3 bucket in a specified AWS region."""
    try:
        s3_client = boto3.client('s3', region_name=region)
        if region == "us-east-1":
            s3_client.create_bucket(Bucket=bucket_name)
        else:
            s3_client.create_bucket(
                Bucket=bucket_name,
                CreateBucketConfiguration={'LocationConstraint': region}
            )
        print(f"S3 bucket '{bucket_name}' created successfully in {region}.")
    except Exception as e:
        print(f"Error creating S3 bucket: {e}")

def create_ec2_instance(instance_type, key_name, security_group, region, ami_id="ami-0c02fb55956c7d316"):
    """Create an EC2 instance in the specified region."""
    try:
        ec2 = boto3.resource('ec2', region_name=region)
        instance = ec2.create_instances(
            ImageId=ami_id,  # Amazon Linux 2 AMI ID (change based on your requirements)
            InstanceType=instance_type,
            KeyName=key_name,
            MinCount=1,
            MaxCount=1,
            SecurityGroupIds=[security_group],
        )
        print(f"EC2 instance '{instance[0].id}' created successfully.")
    except Exception as e:
        print(f"Error creating EC2 instance: {e}")


if __name__ == "__main__":
    REGION = "us-west-2"  # Specify your AWS region
    BUCKET_NAME = "my-unique-bucket-name-123456"  # Replace with a globally unique bucket name
    INSTANCE_TYPE = "t2.micro"  # Free-tier eligible instance type
    KEY_NAME = "my-key-pair"  # Replace with your EC2 key pair name
    SECURITY_GROUP = "sg-0123456789abcdef0"  # Replace with your Security Group ID

    # Create S3 Bucket
    create_s3_bucket(BUCKET_NAME, REGION)

    # Create EC2 Instance
    create_ec2_instance(INSTANCE_TYPE, KEY_NAME, SECURITY_GROUP, REGION)
